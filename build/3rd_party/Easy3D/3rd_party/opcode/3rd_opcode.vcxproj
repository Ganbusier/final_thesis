<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{AD63466E-9AE1-3FE0-BC6A-9A78AB8B2B28}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <VcpkgEnabled>false</VcpkgEnabled>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>3rd_opcode</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="do_not_import_user.props" Condition="exists('do_not_import_user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Files\GitHub\final_thesis\lib\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">3rd_opcode.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">3rd_opcode</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Files\GitHub\final_thesis\lib\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">3rd_opcode.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">3rd_opcode</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Files\GitHub\final_thesis\lib\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">3rd_opcode.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">3rd_opcode</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Files\GitHub\final_thesis\lib\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">3rd_opcode.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">3rd_opcode</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;_CRT_SECURE_NO_DEPRECATE;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Files/GitHub/final_thesis/3rd_party/Easy3D/3rd_party/opcode/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Files/GitHub/final_thesis -BD:/Files/GitHub/final_thesis/build --check-stamp-file D:/Files/GitHub/final_thesis/build/3rd_party/Easy3D/3rd_party/opcode/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Files\GitHub\final_thesis\build\3rd_party\Easy3D\3rd_party\opcode\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Files/GitHub/final_thesis/3rd_party/Easy3D/3rd_party/opcode/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Files/GitHub/final_thesis -BD:/Files/GitHub/final_thesis/build --check-stamp-file D:/Files/GitHub/final_thesis/build/3rd_party/Easy3D/3rd_party/opcode/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Files\GitHub\final_thesis\build\3rd_party\Easy3D\3rd_party\opcode\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/Files/GitHub/final_thesis/3rd_party/Easy3D/3rd_party/opcode/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Files/GitHub/final_thesis -BD:/Files/GitHub/final_thesis/build --check-stamp-file D:/Files/GitHub/final_thesis/build/3rd_party/Easy3D/3rd_party/opcode/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Files\GitHub\final_thesis\build\3rd_party\Easy3D\3rd_party\opcode\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/Files/GitHub/final_thesis/3rd_party/Easy3D/3rd_party/opcode/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Files/GitHub/final_thesis -BD:/Files/GitHub/final_thesis/build --check-stamp-file D:/Files/GitHub/final_thesis/build/3rd_party/Easy3D/3rd_party/opcode/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Files\GitHub\final_thesis\build\3rd_party\Easy3D\3rd_party\opcode\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_AABBCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_AABBTree.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_BaseModel.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_BoxPruning.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Collider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Common.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_HybridModel.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_LSSCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_MeshInterface.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Model.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_OBBCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_OptimizedTree.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Picking.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_PlanesCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_RayCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_SphereCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_SweepAndPrune.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_TreeBuilders.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_TreeCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_VolumeCollider.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Opcode.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceMatrix3x3.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceRay.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceRevisitedRadix.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceSegment.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceTriangle.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceUtils.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceAABB.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceContainer.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceHPoint.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceIndexedTriangle.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceMatrix4x4.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceOBB.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IcePlane.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IcePoint.cpp" />
    <ClCompile Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceRandom.cpp" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_AABBCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_AABBTree.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_BaseModel.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_BoxBoxOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_BoxPruning.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Collider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Common.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_HybridModel.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_IceHook.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_LSSAABBOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_LSSCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_LSSTriOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_MeshInterface.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Model.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_OBBCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_OptimizedTree.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Picking.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_PlanesAABBOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_PlanesCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_PlanesTriOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_RayAABBOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_RayCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_RayTriOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_Settings.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_SphereAABBOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_SphereCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_SphereTriOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_SweepAndPrune.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_TreeBuilders.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_TreeCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_TriBoxOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_TriTriOverlap.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\OPC_VolumeCollider.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Opcode.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceRandom.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceIndexedTriangle.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceAABB.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceAxes.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceBoundingSphere.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceContainer.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceFPU.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceHPoint.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceLSS.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceMatrix3x3.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceMatrix4x4.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceMemoryMacros.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceOBB.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IcePairs.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IcePlane.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IcePoint.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IcePreprocessor.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceRay.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceRevisitedRadix.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceSegment.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceTriangle.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceTriList.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceTypes.h" />
    <ClInclude Include="D:\Files\GitHub\final_thesis\3rd_party\Easy3D\3rd_party\opcode\Ice\IceUtils.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Files\GitHub\final_thesis\build\ZERO_CHECK.vcxproj">
      <Project>{EFF41588-7DA6-3FB3-A9FA-64FD0599B15B}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>